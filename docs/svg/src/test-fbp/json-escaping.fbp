
json_object_str(constant/string:value="{\"escape\": \"escape: \\\\\\/\\\"\\b\\r\\n\\f\\t\", \"unicode\": \"\\u0055\\u006E\\u0069\\u0063\\u006f\\u0064\\u0065\\u0020\\u00c0\\u00CA\\u00CD\\u00f6\\u00FA\\u010e\\u01e7\\u0275\\u0722\\u0788\\u085E\\u0936\\u0f4c\\u2764\\u264e\\u2600\\u2691\\u20ac\\u266b\"}")
json_object(converter/string-to-json-object)

string_validator(test/string-validator:sequence="escape: \\/\"\b\r\n\f\t|Unicode ÀÊÍöúĎǧɵܢވ࡞शཌ❤♎☀⚑€♫")

# Test node json/object-get-key
json_object_str OUT -> IN json_object
json_object OUT -> IN _(json/object-get-key:key="escape") STRING -> IN string_validator
json_object OUT -> IN _(json/object-get-key:key="unicode") STRING -> IN string_validator
string_validator OUT -> RESULT string_result(test/result)

json_object_error(constant/string:value="{\"x\": \"a\\u123x\"}")
json_object_error OUT -> IN _(converter/string-to-blob) OUT -> IN _(converter/blob-to-json-object) OUT -> IN _(json/object-get-key:key="x") ERROR -> IN _(converter/empty-to-boolean) OUT -> PASS invalid_json_array_test(test/result)
