
constant-server(constant/string:value="hello")
response-count(int/accumulator:setup_value=0|2)
constant-client(converter/empty-to-string:output_value="world")

blob-to-str(converter/blob-to-string)

server(http-server/string:path=/test,port=8080)

get-blob(http-client/blob:url="http://localhost:8080/test")
get-string(http-client/string:url="http://localhost:8080/test")
get-json(http-client/json:url="http://localhost:8080/test")
post(http-client/string:url="http://localhost:8080/test")

server-validator(test/string-validator:sequence="hello|world")
string-compare(string/compare)
blob-compare(string/compare)
json-compare(string/compare)

constant-server OUT -> IN server
constant-server OUT -> GET get-string
constant-server OUT -> GET get-json
constant-server OUT -> GET get-blob

server OUT -> IN server-validator

constant-server OUT -> IN[0] string-compare
get-string OUT -> IN[1] string-compare

constant-server OUT -> IN[0] blob-compare
get-blob OUT -> IN blob-to-str OUT -> IN[1] blob-compare

constant-server OUT -> IN[0] json-compare
get-json STRING -> IN[1] json-compare

get-blob OUT -> INC response-count
get-string OUT -> INC response-count
get-json STRING -> INC response-count
response-count OVERFLOW -> IN constant-client
constant-client OUT -> POST post

server-validator OUT -> RESULT test_server_output(test/result:timeout=6000)
string-compare EQUAL -> RESULT test_string_output(test/result:timeout=6000)
blob-compare EQUAL -> RESULT test_blob_output(test/result:timeout=6000)
json-compare EQUAL -> RESULT test_json_output(test/result:timeout=6000)
